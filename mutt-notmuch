#!/usr/bin/env python

# Re-implementation of http://upsilon.cc/~zack/blog/posts/2011/01/how_to_use_Notmuch_with_Mutt/mutt-notmuch
# in Python with no third-party dependencies

# License: GNU General Public License (GPL), version 3 or above

import argparse
import mailbox
import os
import os.path
import shutil
import subprocess

DEFAULT_RESULTS_DIR = os.path.expanduser("~/.cache/mutt_results")


def empty_maildir(odir):
    shutil.rmtree(odir)
    mailbox.Maildir(odir, create=True)


def search(args):
    empty_maildir(args.output_dir)
    if args.prompt:
        query = raw_input('search: ')
    elif args.query:
        query = ' '.join(args.query)
    else:
        raise ValueError('Need either --prompt or a query')
    if query.strip() == '?':
        subprocess.check_call('notmuch help search', shell=True)
        return

    p = subprocess.Popen(
        'notmuch search --output=files %s' % query,
        shell=True, stdout=subprocess.PIPE
    )
    od = os.path.join(args.output_dir, 'cur')
    for line in p.stdout:
        path = line.strip()
        base = os.path.basename(path)
        os.symlink(path, os.path.join(od, base))
    p.wait()


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--output-dir', default=DEFAULT_RESULTS_DIR)
    parser.add_argument('--prompt', action='store_true')
    parser.add_argument('action', choices=('search', 'thread'))
    parser.add_argument('query', nargs='*')
    args = parser.parse_args()

    if args.action == 'search':
        search(args)


if __name__ == '__main__':
    main()
